//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : Prawdopodobienstwo.cpp
//  @ Date : 13/04/2025
//  @ Author :
//
//

#include "Prawdopodobienstwo.h"

Prawdopodobienstwo::Prawdopodobienstwo(int liczbaProb, int liczbaSukcesow, double prawdopodobienstwoSukcesu)
{
    wprowadzDane(liczbaProb, liczbaSukcesow, prawdopodobienstwoSukcesu);
    potega = nullptr;
    symbolNewtona = nullptr;
}

void Prawdopodobienstwo::wprowadzDane(int liczbaProb, int liczbaSukcesow, double prawdopodobienstwoSukcesu)
{
    this->liczbaProb = liczbaProb;
    this->liczbaSukcesow = liczbaSukcesow;
    this->prawdopodobienstwoSukcesu = prawdopodobienstwoSukcesu;
    this->danePoprawne = sprawdzPoprawnoscDanych();
    this->wynik = 0.0;
}

bool Prawdopodobienstwo::sprawdzPoprawnoscDanych()
{

    if (liczbaProb < 0 || liczbaSukcesow < 0 || liczbaSukcesow > liczbaProb)
    {
        return false;
    }

    if (prawdopodobienstwoSukcesu < 0.0 || prawdopodobienstwoSukcesu > 1.0)
    {
        return false;
    }

    return true;
}

double Prawdopodobienstwo::obliczPrawdopodobienstwo()
{
    if (!danePoprawne)
    {
        return 0.0;
    }

    symbolNewtona = new SymbolNewtona(liczbaProb, liczbaSukcesow);
    double wspolczynnikNewtona = symbolNewtona->oblicz();

    potega = new Potega(prawdopodobienstwoSukcesu * 1000, liczbaSukcesow);
    double pDoK = potega->oblicz() / (1000.0 * liczbaSukcesow);

    potega = new Potega((1.0 - prawdopodobienstwoSukcesu) * 1000, liczbaProb - liczbaSukcesow);
    double qDoNK = potega->oblicz() / (1000.0 * (liczbaProb - liczbaSukcesow));

    delete symbolNewtona;
    delete potega;

    return wspolczynnikNewtona * pDoK * qDoNK;
}
