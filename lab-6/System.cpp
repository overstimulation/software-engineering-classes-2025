//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : System.cpp
//  @ Date : 07/04/2025
//  @ Author :
//
//

#include "System.h"
#include <iostream>

bool System::authenticate(const string &identifier, const string &password)
{
    auto it = userDatabase.find(identifier);
    if (it != userDatabase.end() && it->second == password)
    {
        cout << "User authenticated successfully" << endl;
        return true;
    }
    cout << "Authentication failed" << endl;
    return false;
}

bool System::registerUser(const string &identifier, const string &password)
{
    if (userDatabase.find(identifier) == userDatabase.end())
    {
        userDatabase[identifier] = password;
        cout << "User registered successfully" << endl;
        return true;
    }
    cout << "User already exists" << endl;
    return false;
}

void System::addUser(User *user)
{
    if (user)
    {
        users.push_back(user);
        cout << "User added to system" << endl;
    }
    else
    {
        cout << "Invalid user" << endl;
    }
}

void System::removeUser(const string &identifier)
{
    for (auto it = users.begin(); it != users.end(); ++it)
    {
        if ((*it) && userDatabase.find(identifier) != userDatabase.end() && users[it - users.begin()] == *it)
        {
            delete *it;
            users.erase(it);
            userDatabase.erase(identifier);
            cout << "User removed from system" << endl;
            return;
        }
    }
    cout << "User not found" << endl;
}

System::System() : isUserRegistered(false) {}

System::~System()
{
    for (User *user : users)
    {
        delete user;
    }
    users.clear();
}
